setwd("../..")
# Libraries ---------------------------------------------------------------
suppressMessages(library(tidyverse))
suppressMessages(library(fastverse))
suppressMessages(library(tidytable))
suppressMessages(library(foreach))
suppressMessages(library(dtplyr))
suppressMessages(library(glue))
suppressMessages(library(ComplexHeatmap))
suppressMessages(library(gespeR))
source("src/scripts/utils.R")
source("src/scripts/configs.R")
# Inputs -------------------------------------------------------------------
input_file <- glue("{awe_local_dir}20211201/all_annotations_20211201.annot.gz")
annot_path <- glue("{awe_local_dir}Annotated_files_20170802")
libs <- c("IR", "JX", "PB")
# read in
insertions <- data.table::fread(input_file) %>%
separate.(V1,
sep = "_",
into = c("patient", "sample", "orientation"),
remove = FALSE)
insertions <- data.table::fread(input_file)
head(insertions)
# read in
insertions <- data.table::fread(input_file) %>%
separate.(sample,
sep = "_",
into = c("patient", "sample", "orientation"),
remove = FALSE)
insertions
names(insertions)
# read in
insertions <- data.table::fread(input_file) %>%
separate.(sample,
sep = "_",
into = c("patient", "sample", "orientation"),
remove = FALSE) %>%
mutate.(lib = dplyr::case_when(grepl("IR", orientation) ~ "IR", grepl("PB", orientation) ~ "PB", grepl("JX", orientation) ~ "JX"))
head(insertions)
table(insertions$lib)
# split libraries
ovlp <- map(libs, \(x) {insertions %>% filter.(lib == x) %>% mutate.(insertion_map = glue("{chr}_{loc}_{gene_orientation}"))}) %>%
setNames(libs)
mice <- metadata %>%
filter.(grepl("TAM", tam_status)) %>%
arrange.(tam_status) %>%
pull.(mouse_id) %>%
unique() %>%
.[. %in% unique(insertions$patient)]
metadata_file <- glue("{awe_local_dir}20220524/metadata_20220524.csv")
# load metadata
metadata <- fread(metadata_file, nThread = 8) %>%
select.(-barcode_seq, -tnp_end, -V1) %>%
mutate.(donor = (donor %>% str_replace("^7", "chr7") %>% str_replace("^10", "chr10")),
comment = case_when(
mouse_id == "3-27-15M" ~ "Biological Control (BlBPcre+; EZH2)",
mouse_id == "2-16-17T" ~ "LP Triple Control",
mouse_id == "2-26-16M" ~ "Biological LP Control",
mouse_id %in% c("11-11-15U", "2-24-17T", "3-13-17T") ~ "Biological Control",
grepl("4-7-15", mouse_id) ~ "To omit. Unclear genotype + NA tam status. Marked as a CTRL in RNA metadata.",
TRUE ~ as.character(comment))) %>%
unique()
mice <- metadata %>%
filter.(grepl("TAM", tam_status)) %>%
arrange.(tam_status) %>%
pull.(mouse_id) %>%
unique() %>%
.[. %in% unique(insertions$patient)]
mice
source("src/scripts/utils.R")
# calculate jaccard scores
ir_jx_mtx <- jaccard_matrix(ovlp$IR, ovlp$JX, mice) #takes about a minute for each
ir_pb_mtx <- jaccard_matrix(ovlp$IR, ovlp$PB, mice)
pb_jx_mtx <- jaccard_matrix(ovlp$PB, ovlp$JX, mice)
table(unique(ovlp$IR$insertion_map) %in% unique(ovlp$JX$insertion_map))
table(unique(ovlp$IR$insertion_map) %in% unique(ovlp$PB$insertion_map)) #zero??
table(unique(ovlp$JX$insertion_map) %in% unique(ovlp$PB$insertion_map)) #zero??
# prep to plot
label <- "orig_insertions_no_filters"
selection <- "ir_jx_mtx"
mat <- ir_jx_mtx %>% as.matrix()
lp_cols <- pal[c("red", "blue")] %>% as.character()
# reorder matrix
order <- diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id") %>%
arrange.(tam_status, desc(jaccard)) %>%
pull.(mouse_id)
hm <- ComplexHeatmap::Heatmap(mat,
name = glue("Jaccard Index"),
col = viridis::inferno(100), #c("white", "red3"),
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows = FALSE,
cluster_columns = FALSE,
row_order = order,
column_order = order,
row_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
column_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
border = TRUE,
top_annotation = HeatmapAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("TAM+", "TAM-"),
labels_gp = gpar(col = "white", fontsize = 10))),
left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("TAM+", "TAM-"),
labels_gp = gpar(col = "white", fontsize = 10))),
row_title = "IR Libraries",
column_title = "JX Libraries",
heatmap_legend_param = list(direction = "vertical",
# at = c(0, 0.5, 1),
legend_height = unit(4, "cm"),
title_position = "leftcenter-rot"))
draw(hm)
# Inputs -------------------------------------------------------------------
input_file <- glue("{outdir}/subclonal_insertions.csv.gz")
# Inputs -------------------------------------------------------------------
input_file <- glue("outs/subclonal_insertions.csv.gz")
# load insertions
insertions <- data.table::fread(input_file) %>%
separate.(sample,
sep = "_",
into = c("patient", "sample", "orientation"),
remove = FALSE) %>%
mutate.(lib = dplyr::case_when(grepl("IR", orientation) ~ "IR", grepl("PB", orientation) ~ "PB", grepl("JX", orientation) ~ "JX"))
insertions
insertions <- data.table::fread(input_file)
insertions
# load insertions
insertions <- data.table::fread(input_file) %>%
mutate.(lib = dplyr::case_when(grepl("IR", orientation) ~ "IR", grepl("PB", orientation) ~ "PB", grepl("JX", orientation) ~ "JX"))
# split libraries
ovlp <- map(libs, \(x) {insertions %>% filter.(lib == x) %>% mutate.(insertion_map = glue("{chr}_{loc}_{gene_orientation}"))}) %>%
setNames(libs)
mice <- metadata %>%
filter.(grepl("TAM", tam_status)) %>%
arrange.(tam_status) %>%
pull.(mouse_id) %>%
unique() %>%
.[. %in% unique(insertions$patient)]
# calculate jaccard scores
ir_jx_mtx <- jaccard_matrix(ovlp$IR, ovlp$JX, mice) #takes about a minute for each
selection <- "ir_jx_mtx"
mat <- ir_jx_mtx %>% as.matrix()
lp_cols <- c("#E773A0", "#526A8F")
# reorder matrix
order <- diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id") %>%
arrange.(tam_status, desc(jaccard)) %>%
pull.(mouse_id)
hm <- ComplexHeatmap::Heatmap(mat,
name = glue("Jaccard Index"),
col = viridis::inferno(100), #c("white", "red3"),
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows = FALSE,
cluster_columns = FALSE,
row_order = order,
column_order = order,
row_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
column_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
border = TRUE,
top_annotation = HeatmapAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("TAM+", "TAM-"),
labels_gp = gpar(col = "white", fontsize = 10))),
left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("TAM+", "TAM-"),
labels_gp = gpar(col = "white", fontsize = 10))),
row_title = "IR Libraries",
column_title = "JX Libraries",
heatmap_legend_param = list(direction = "vertical",
# at = c(0, 0.5, 1),
legend_height = unit(4, "cm"),
title_position = "leftcenter-rot"))
draw(hm)
lp_cols <- pal[c("red", "blue")] %>% as.character()
# reorder matrix
order <- diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id") %>%
arrange.(tam_status, desc(jaccard)) %>%
pull.(mouse_id)
hm <- ComplexHeatmap::Heatmap(mat,
name = glue("Jaccard Index"),
col = viridis::inferno(100), #c("white", "red3"),
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows = FALSE,
cluster_columns = FALSE,
row_order = order,
column_order = order,
row_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
column_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
border = TRUE,
top_annotation = HeatmapAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("TAM+", "TAM-"),
labels_gp = gpar(col = "white", fontsize = 10))),
left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("TAM+", "TAM-"),
labels_gp = gpar(col = "white", fontsize = 10))),
row_title = "IR Libraries",
column_title = "JX Libraries",
heatmap_legend_param = list(direction = "vertical",
# at = c(0, 0.5, 1),
legend_height = unit(4, "cm"),
title_position = "leftcenter-rot"))
draw(hm)
hm <- ComplexHeatmap::Heatmap(mat,
name = glue("Jaccard Index"),
col = viridis::inferno(100), #c("white", "red3"),
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows = FALSE,
cluster_columns = FALSE,
row_order = order,
column_order = order,
row_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
column_split = c(rep("A", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM+") %>% nrow())),
rep("B", (metadata %>% filter.(mouse_id %in% mice & tam_status == "TAM-") %>% nrow()))),
border = TRUE,
top_annotation = HeatmapAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("Tamoxifen+", "Tamoxifen-"),
labels_gp = gpar(col = "white", fontsize = 10))),
left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = lp_cols),
labels = c("Tamoxifen+", "Tamoxifen-"),
labels_gp = gpar(col = "white", fontsize = 10))),
row_title = "IR Libraries",
column_title = "JX Libraries",
heatmap_legend_param = list(direction = "vertical",
# at = c(0, 0.5, 1),
legend_height = unit(4, "cm"),
title_position = "leftcenter-rot"))
draw(hm)
pdf(glue("{outdir}/heatmap_jaccard_{selection}_{label}.pdf"), w = 10, h = 10)
pdf(glue("outs/heatmap_jaccard_{selection}_{label}.pdf"), w = 10, h = 10)
draw(hm)
dev.off()
diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id") %>%
mutate.(tam_status = factor(tam_status, levels = c("TAM+", "TAM-"))) %>%
ggplot(aes(tam_status, jaccard, color = tam_status))+
geom_violin(width=0.8)+
geom_boxplot(width=0.2, color="black", alpha = 0.2, outlier.shape = NA)+
geom_jitter(width=0.1, alpha = 0.5)+
ggpubr::stat_compare_means(label.x.npc = "center", method = "t.test")+
theme_classic()+
scale_color_manual(values = lp_cols)+
ylab('Jaccard Index (IR vs. JX)')+
theme(legend.position = "none",axis.title.x = element_blank())
diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id")
diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id") %>%
mutate.(tam_status = (ifelse(tam_status == "TAM+", "Tamoxifen+", "Tamoxifen-") %>% factor(levels = c("Tamoxifen+", "Tamoxifen-")))) %>%
ggplot(aes(tam_status, jaccard, color = tam_status))+
geom_violin(width=0.8)+
geom_boxplot(width=0.2, color="black", alpha = 0.2, outlier.shape = NA)+
geom_jitter(width=0.1, alpha = 0.5)+
ggpubr::stat_compare_means(label.x.npc = "center", method = "t.test")+
theme_classic()+
scale_color_manual(values = lp_cols)+
ylab('Jaccard Index (IR vs. JX)')+
theme(legend.position = "none",axis.title.x = element_blank())
# violin plot
pdf(glue("outs/violin_jaccard_{selection}_{label}.pdf"), w = 3, h = 3)
diag(mat) %>%
as.data.frame() %>%
dplyr::rename(jaccard = 1) %>%
rownames_to_column(var = "mouse_id") %>%
left_join.(metadata, by = "mouse_id") %>%
mutate.(tam_status = (ifelse(tam_status == "TAM+", "Tamoxifen+", "Tamoxifen-") %>% factor(levels = c("Tamoxifen+", "Tamoxifen-")))) %>%
ggplot(aes(tam_status, jaccard, color = tam_status))+
geom_violin(width=0.8)+
geom_boxplot(width=0.2, color="black", alpha = 0.2, outlier.shape = NA)+
geom_jitter(width=0.1, alpha = 0.5)+
ggpubr::stat_compare_means(label.x.npc = "center", method = "t.test")+
theme_classic()+
scale_color_manual(values = lp_cols)+
ylab('Jaccard Index (IR vs. JX)')+
theme(legend.position = "none",axis.title.x = element_blank())
dev.off()
