chromosome_length <- 1000000
gene_positions <- c(1000, 50000, 750000, 900000)
# Create a point pattern object for the gene positions
gene_ppp <- ppp(gene_positions, rep(1, length(gene_positions)), c(0, chromosome_length), c(0, 1))
gene_ppp
# Calculate the K function
k_function <- Kest(gene_ppp, correction = "Ripley")
k_function
# Plot the K function
plot(k_function, main = "Ripley's K function for gene positions")
# Calculate the confidence bands for the K function
k_confint <- Kenv(gene_ppp, correction = "Ripley")
?Kenv
# Load required packages
library(spatstat)
library(spatstat.utils)
# Example input genes on the same chromosome
input_genes <- c("gene1", "gene2", "gene3", "gene4")
# Define chromosome length and gene positions
chromosome_length <- 1000000
gene_positions <- c(1000, 50000, 750000, 900000)
# Create a point pattern object for the gene positions
gene_ppp <- ppp(gene_positions, rep(1, length(gene_positions)), c(0, chromosome_length), c(0, 1))
# Calculate Monte Carlo simulations of the K function envelopes
set.seed(123) # For reproducibility
k_envelope <- envelope(gene_ppp, Kest, nsim = 99)
# Calculate observed test statistic
observed_k <- Kest(gene_ppp)
observed_k
observed_statistic <- max(observed_k$iso - k_envelope$env[, 1])
observed_k$iso
k_envelope
k_envelope$env
k_envelope$envelope
data(swedishpines)
swedishpines
plot(swedishpines)
k <- Kest(swedishpines)
k
plot(k)
?ppp
# Load required packages
library(spatstat)
library(spatstat.utils)
# Example input genes on the same chromosome
input_genes <- c("gene1", "gene2", "gene3", "gene4")
# Define chromosome length and gene positions
chromosome_length <- 1000000
# Define chromosome length and gene positions
chrom_length <- 1000000
gene_positions <- c(1000, 50000, 750000, 900000)
# Create a point pattern object for the gene positions
# gene_ppp <- ppp(gene_positions, rep(1, length(gene_positions)), c(0, chromosome_length), c(0, 1))
my_ppp <- ppp(gene_positions, 0, xrange = c(0, chrom_length), yrange = 0)
# Create a point pattern object for the gene positions
# gene_ppp <- ppp(gene_positions, rep(1, length(gene_positions)), c(0, chromosome_length), c(0, 1))
my_ppp <- ppp(gene_positions, 0, xrange = c(0, chrom_length), yrange = c(0,0))
# Create a point pattern object for the gene positions
# gene_ppp <- ppp(gene_positions, rep(1, length(gene_positions)), c(0, chromosome_length), c(0, 1))
my_ppp <- ppp(gene_positions, rep(0, length(gene_positions), xrange = c(0, chrom_length), yrange = c(0,0))
# Create a point pattern object for the gene positions
# gene_ppp <- ppp(gene_positions, rep(1, length(gene_positions)), c(0, chromosome_length), c(0, 1))
my_ppp <- ppp(gene_positions, rep(0, length(gene_positions)), xrange = c(0, chrom_length), yrange = c(0,0))
plot(my_ppp)
# Create a point pattern object for the gene positions
p <- ppp(gene_positions, rep(0, length(gene_positions)), xrange = c(0, chrom_length), yrange = c(0,0))
# Create a point pattern object for the gene positions
p <- ppp(gene_positions, rep(0, length(gene_positions)), xrange = c(0, chrom_length), yrange = c(0,0))
# plot
plot(p, title = "test")
?plot
# plot
plot(p, main = "test")
# plot
plot(p, main = glue::glue("Positions on {chrom}"))
chrom <- "chr1"
# plot
plot(p, main = glue::glue("Positions on {chrom}"))
# Define chromosome length and gene positions
chrom <- "chr1"
# calculate and plot Ripley's K function using the 'Ripley' correction
kf <- Kest(p, correction = "Ripley")
runif(50)
# Create a point pattern object for the gene positions
p <- ppp(gene_positions, rep(0, length(gene_positions)), c(0, chrom_length))
# Create a point pattern object for the gene positions
p <- ppp(gene_positions, rep(0, length(gene_positions)), c(0, chrom_length), check = FALSE)
# Create a point pattern object for the gene positions
W <- owin(c(0, chrom_length))
chrom_length
# Create a point pattern object for the gene positions
W <- owin(c(0, chrom_length))
?owin
# Create a point pattern object for the gene positions
W <- owin(c(0, chrom_length), NULL)
# Create a point pattern object for the gene positions
W <- owin(c(0, chrom_length), c(NULL, NULL))
# Create a point pattern object for the gene positions
W <- owin(c(0, chrom_length), c(0, 0))
p <- ppp(gene_positions, window = W)
# Create a point pattern object for the gene positions
W <- owin(c(0, chrom_length), c(-1, 1))
p <- ppp(gene_positions, window = W)
p <- ppp(gene_positions, rep(0, length(gene_positions)) window = W)
p <- ppp(gene_positions, rep(0, length(gene_positions)), window = W)
p
# plot
plot(p, main = glue::glue("Positions on {chrom}"))
?linnet
?FeaturePlot
# magic shh ---------------------------------------------------------------
xl_path <- "/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx"
u1_path <- "/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/MB_Shh_U1_TP53_Status.csv"
u1 <- readr::read_csv(u1_path)
u1
View(u1)
mag <- readxl::read_excel(xl_path)
View(mag)
mag <- readxl::read_excel(xl_path) %>%
dplyr::filter(!is.na(active))
View(mag)
# magic shh ---------------------------------------------------------------
library(magrittr)
mag <- readxl::read_excel(xl_path) %>%
dplyr::filter(!is.na(active))
mag
mag <- readxl::read_excel(xl_path) %>%
dplyr::filter(!is.na(active)) %>%
dplyr::select(active_tissue_id, tissue_mass_mg)
mag
mag <- readxl::read_excel(xl_path) %>%
dplyr::filter(!is.na(active)) #%>%
names(mag)
mag <- readxl::read_excel(xl_path) %>%
dplyr::filter(!is.na(active)) %>%
dplyr::select(active_tissue_id, tissue_mass_mg, box_tissue)
mag
u1
mag <- readxl::read_excel(xl_path) %>%
dplyr::filter(!is.na(active)) %>%
dplyr::select(active_tissue_id, tissue_mass_mg, box_tissue) %>%
dplyr::mutate(Original_sample_ID = glue::glue("MB-{active_tissue_id}")) %>%
dplyr::select(-active_tissue_id)
to_ex <- u1 %>%
dplyr::left_join(mag, by = "Original_sample_ID")
to_ex
to_ex <- u1 %>%
dplyr::left_join(mag, by = "Original_sample_ID") %>%
dplyr::arrange(tissue_mass_mg)
to_ex
to_ex <- u1 %>%
dplyr::left_join(mag, by = "Original_sample_ID") %>%
dplyr::arrange(desc(tissue_mass_mg))
writexl::write_xlsx(to_ex, "sandbox/MB_Shh_U1_TP53_Status_Tissue_Mass.xlsx")
library(class)
?class::knn
?colSums
colSums(c(5,4,3))
matrix(c(4,5,6,2,3,1))
?matrix
matrix(c(5,4,3,2), ncol = 2)
matrix(c(5,4,3,2), ncol = 2) %>% colSums()
library(magrittr)
matrix(c(5,4,3,2), ncol = 2) %>% colSums()
matrix(c(5,4,3,2,6,NA), ncol = 2) %>% colSums()
mtcars
scale(c(0,1,5))
?CreateInfercnvObject
# tradeseq -------------------------------------------------------
ts <- readRDS("/Users/anders/sandbox/CS_10X_merge_HOXless_CS20s_SCTccmtreg_PC10_final_sce_slingshot_PClineage_noSOX14_GAM_28workers_geneFilt4x10.RDS")
ts
cb <- readr::read_tsv("/Users/anders/Downloads/cytoBand.txt")
cb
cb <- readr::read_tsv("/Users/anders/Downloads/cytoBand.txt", colnames = FALSE)
cb <- readr::read_tsv("/Users/anders/Downloads/cytoBand.txt", col_names = FALSE)
cb
?download.file
df <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active))
View(df)
# db tissue amount check --------------------------------------------------
library(magrittr)
df <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active))
View(df)
names(df)
df <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names()
View(df)
names(df)
df <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names() %>%
dplyr::rename(snf_subtype = tissue_snf_subtypes_snf_subgroup_subtype)
df %>% dplyr::filter(!is.na(tissue_mass_mg) & grepl("Group", snf_subtype))
df %>% dplyr::filter(!is.na(tissue_mass_mg) & grepl("Group", snf_subtype)) %>%
dplyr::select(patient_id, tissue_mass_mg, snf_subtype)
df %>% dplyr::filter(!is.na(tissue_mass_mg) & grepl("Group", snf_subtype)) %>%
dplyr::select(patient_id, tissue_mass_mg, snf_subtype) %>%
dplyr::filter(tissue_mass_mg >= 35)
df %>% dplyr::filter(!is.na(tissue_mass_mg) & grepl("Group", snf_subtype)) %>%
dplyr::select(patient_id, tissue_mass_mg, snf_subtype) %>%
dplyr::filter(tissue_mass_mg >= 35) %>%
dplyr::arrange(desc(tissue_mass_mg))
df %>% dplyr::filter(!is.na(tissue_mass_mg) & grepl("Group", snf_subtype)) %>%
dplyr::select(patient_id, tissue_mass_mg, snf_subtype) %>%
dplyr::filter(tissue_mass_mg >= 35) %>%
dplyr::arrange(desc(tissue_mass_mg)) %>%
View()
?FeatureScatter
hiro <- readxl::read_excel("/Users/anders/Downloads/20180807_SachinRNA_Authors.xls")
hiro
hiro <- readxl::read_excel("/Users/anders/Downloads/20180807_SachinRNA_Authors.xls", sheet = 2)
hiro
hiro <- readxl::read_excel("/Users/anders/Downloads/20180807_SachinRNA_Authors.xls", sheet = 2) %>%
janitor::clean_names()
# shh sample info ---------------------------------------------------------
library(magrittr)
hiro <- readxl::read_excel("/Users/anders/Downloads/20180807_SachinRNA_Authors.xls", sheet = 2) %>%
janitor::clean_names()
hiro
ps <- readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>% janitor::clean_names()
ps
hs
hs <- readxl::read_excel("/Users/anders/Downloads/20180807_SachinRNA_Authors.xls", sheet = 2) %>%
janitor::clean_names()
hs
ps <- readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names() %>%
tidyr::separate(sample_id, into = c("sample_id", "mb_id"), sep = "_")
ps
ps <- readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names() %>%
tidyr::separate(sample_id, into = c("sample_id", "mb_id"), sep = "_") %>%
tidyr::seprate(subtype, into = c("st_num", "shh", "shh_subtype"))
ps
ps <- readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names() %>%
tidyr::separate(sample_id, into = c("sample_id", "mb_id"), sep = "_") %>%
tidyr::separate(subtype, into = c("st_num", "shh", "shh_subtype"))
ps
View(ps)
hs
ps <- readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names() %>%
tidyr::separate(sample_id, into = c("sample_id", "mb_id"), sep = "_") %>%
tidyr::separate(subtype, into = c("st_num", "subgroup", "shh_subtype")) %>%
dplyr::select(-mb_id, -st_num)
ps
ps
# db tissue amount check --------------------------------------------------
library(magrittr)
df <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names() %>%
dplyr::rename(snf_subtype = tissue_snf_subtypes_snf_subgroup_subtype)
names(df)
Viwe(df)
View(df)
hs
# join
table(hs$sample_id %in% ps$sample_id)
table(ps$sample_id %in% hs$sample_id)
# join
hs %>% dplyr::full_join(ps, by = "sample_id")
names(hs)
names(ps)
hs
# join
hs %>% dplyr::full_join(ps, by = "sample_id") %>% View()
# join
hs %>% dplyr::full_join(ps, by = c("sample_id", "subgroup")) %>% View()
# join
hs %>% dplyr::full_join(ps, by = c("sample_id", "subgroup", "shh_subtype")) %>% View()
# join
hs %>% dplyr::full_join(ps, by = c("sample_id", "subgroup", "shh_subtype")) %>% dplyr::pull(sample_id) %>% unique() %>% length()
?dplyr::coalesce
y <- c(1, 2, NA, NA, 5)
z <- c(NA, NA, 3, 4, 5)
coalesce(y, z)
y <- c(1, 2, NA, NA, 5)
z <- c(NA, NA, 3, 4, 5)
dplyr::coalesce(y, z)
# join
hs %>% dplyr::full_join(ps, by = "sample_id")
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(subgroup = dplyr::coalesce(subgroup.x, subgroup.y))
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(subgroup = dplyr::coalesce(subgroup.x, subgroup.y)) %>% View()
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y)) %>% View()
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH")
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH") %>% names()
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH") %>%
dplyr::select(-subgroup.x, -subgroup.y, -shh_subtype.x, -shh_subtype.y)
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH") %>%
dplyr::select(-subgroup.x, -subgroup.y, -shh_subtype.x, -shh_subtype.y) %>% View()
# join
hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH") %>%
dplyr::select(-subgroup.x, -subgroup.y, -shh_subtype.x, -shh_subtype.y) %>%
dplyr::relocate(sample_id, subgroup, shh_subtype, age, gender)
# join
df <- hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH") %>%
dplyr::select(-subgroup.x, -subgroup.y, -shh_subtype.x, -shh_subtype.y) %>%
dplyr::relocate(sample_id, subgroup, shh_subtype, age, gender)
# write
writexl::write_xlsx(df, "~/sandbox/shh_metadata_hiro_patryk.xlsx")
# pdf collation -----------------------------------------------------------
pdf_dir <- "/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/repos/lazy_piggy/indd/KCNB2 LP Figures Linked 20221129 V16/revised_20230322/"
outdir <- glue::glue("{pdf_dir}/collated")
pdfs <- list.files(pdf_dir, pattern = ".pdf", full.names = TRUE)
qpdf::pdf_combine(pdfs, output = glue::glue("{outdir}/figures_20230516.pdf"))
library(readxl)
library(tidyverse)
library(lubridate)
library(survival)
library(janitor)
library(glue)
library(survminer)
library(magrittr)
library(DESeq2)
library(ggrepel)
library(cowplot)
library(viridis)
library(tidytable)
library(HGNChelper)
library(ComplexHeatmap)
source("src/scripts/configs.R")
source("src/scripts/utils.R")
setwd("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/repos/lazy_piggy/")
library(readxl)
library(tidyverse)
library(lubridate)
library(survival)
library(janitor)
library(glue)
library(survminer)
library(magrittr)
library(DESeq2)
library(ggrepel)
library(cowplot)
library(viridis)
library(tidytable)
library(HGNChelper)
library(ComplexHeatmap)
source("src/scripts/configs.R")
source("src/scripts/utils.R")
# read in
res_filt <- readRDS(glue("{repo_dir}/outs/rna_deseq_res_filt.rds"))
# cleaning volcano df
dict <- gprofiler2::gconvert(rownames(res_filt), "mmusculus", "MGI")
p_adj_cutoff <- 0.05
lfc_cutoff <- 1
lp_volc <- res_filt %>%
mutate(symbol = ifelse(rownames(.) %in% dict$input, plyr::mapvalues(rownames(.),dict$input,dict$name), NA)) %>%
filter(!is.na(symbol) & !is.na(padj)) %>%
mutate(colour = ifelse(padj > p_adj_cutoff | abs(log2FoldChange) < lfc_cutoff, "not_sig",
ifelse(log2FoldChange > 0, "up", "down")),
label = ifelse(symbol %in% (filter(., colour != "not_sig") %>% slice_min(order_by = padj, n = 10) %>% pull(symbol)) | (grepl("Kcn", symbol) & colour == "up") | colour == "down",symbol,""))
# Set plot boundaries
xbound <- max(abs(lp_volc$log2FoldChange)) + 0.1
# palette
mypal <- c(as.character(pal['red']), "grey", as.character(pal['blue']))
# manually remove Scd2 for visualization purposes
lp_volc %<>% filter(symbol != "Scd2")
print(ggplot(lp_volc, aes(log2FoldChange, -log10(padj), label = label, colour = colour))+
geom_point()+
geom_label_repel(size = ifelse(grepl("Kcn", lp_volc$symbol), 3.5 ,3.5),
segment.size = 0.2, box.padding = 0.5,
color = ifelse(grepl("Kcn", lp_volc$symbol), pal[3],"black"),
segment.color = "black", max.overlaps = Inf)+
scale_color_manual(values = alpha(c(mypal), 0.9),
breaks = c("up", "not_sig", "down"),
labels = c("TAM+", "Not Sig", "TAM-"))+
theme(panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1),
plot.title = element_text(size=10),
legend.key = element_blank(),
legend.title = element_blank(),
legend.position = "none", #c(.95, .95)
legend.justification = c("right", "top"),
legend.margin = margin(rep(1,4)))+
xlab(expression('log'[2]*'FoldChange'))+
ylab(expression('-log'[10]*'P'[adj]))+
xlim(-xbound, xbound)+
guides(colour = guide_legend(override.aes = list(size=3)))
)
# ggplot
pdf(glue("{repo_dir}/outs/volcano_deseq2_lazy_piggy_rnaseq_tam_pos_vs_neg.pdf"), h = 5, w = 5)
print(ggplot(lp_volc, aes(log2FoldChange, -log10(padj), label = label, colour = colour))+
geom_point()+
geom_label_repel(size = ifelse(grepl("Kcn", lp_volc$symbol), 3.5 ,3.5),
segment.size = 0.2, box.padding = 0.5,
color = ifelse(grepl("Kcn", lp_volc$symbol), pal[3],"black"),
segment.color = "black", max.overlaps = Inf)+
scale_color_manual(values = alpha(c(mypal), 0.9),
breaks = c("up", "not_sig", "down"),
labels = c("TAM+", "Not Sig", "TAM-"))+
theme(panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1),
plot.title = element_text(size=10),
legend.key = element_blank(),
legend.title = element_blank(),
legend.position = "none", #c(.95, .95)
legend.justification = c("right", "top"),
legend.margin = margin(rep(1,4)))+
xlab(expression('log'[2]*'FoldChange'))+
ylab(expression('-log'[10]*'P'[adj]))+
xlim(-xbound, xbound)+
guides(colour = guide_legend(override.aes = list(size=3)))
)
dev.off()
pdf_dir <- "/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/repos/lazy_piggy/indd/KCNB2 LP Figures Linked 20221129 V16/revised_20230322/"
outdir <- glue::glue("{pdf_dir}/collated")
pdfs <- list.files(pdf_dir, pattern = ".pdf", full.names = TRUE)
qpdf::pdf_combine(pdfs, output = glue::glue("{outdir}/figures_20230516.pdf"))
qpdf::pdf_combine(pdfs, output = glue::glue("{outdir}/figures_20230516.pdf"))
qpdf::pdf_combine(pdfs, output = glue::glue("{outdir}/figures_20230516.pdf"))
qpdf::pdf_combine(pdfs, output = glue::glue("{outdir}/figures_20230516.pdf"))
# shh sample info ---------------------------------------------------------
library(magrittr)
# import and clean
hs <- readxl::read_excel("/Users/anders/Downloads/20180807_SachinRNA_Authors.xls", sheet = 2) %>%
janitor::clean_names()
ps <- readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names() %>%
tidyr::separate(sample_id, into = c("sample_id", "mb_id"), sep = "_") %>%
tidyr::separate(subtype, into = c("st_num", "subgroup", "shh_subtype")) %>%
dplyr::select(-mb_id, -st_num)
# join
df <- hs %>%
dplyr::full_join(ps, by = "sample_id") %>%
dplyr::mutate(shh_subtype = dplyr::coalesce(shh_subtype.x, shh_subtype.y),
subgroup = "SHH") %>%
dplyr::select(-subgroup.x, -subgroup.y, -shh_subtype.x, -shh_subtype.y) %>%
dplyr::relocate(sample_id, subgroup, shh_subtype, age, gender)
df
table(df$gender, useNA = 'always')
89+143
table(df$shh_subtype, useNA = 'always')
# magic db shh
mag <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names() %>%
dplyr::rename(snf_subtype = tissue_snf_subtypes_snf_subgroup_subtype)
mag
View(mag)
head(mag$snf_subtype)
# magic db shh
mag <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names() %>%
dplyr::rename(snf_subtype = tissue_snf_subtypes_snf_subgroup_subtype) %>%
dplyr::filter(grepl("SHH", snf_subtype))
View(mag)
# magic db shh
mag <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names() %>%
dplyr::rename(snf_subtype = tissue_snf_subtypes_snf_subgroup_subtype) %>%
dplyr::filter(grepl("SHH", snf_subtype) & !is.na(tissue_mass_mg))
mag
View(mag)
hs
ps
readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names()
readxl::read_excel("/Users/anders/Downloads/41467_2021_21883_MOESM3_ESM.xlsx") %>%
janitor::clean_names() %>% View()
# magic db shh
mag <- readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>%
dplyr::filter(!is.na(active)) %>%
janitor::clean_names() %>%
dplyr::rename(snf_subtype = tissue_snf_subtypes_snf_subgroup_subtype) %>%
dplyr::filter(grepl("SHH", snf_subtype) & !is.na(tissue_mass_mg))
mag
table(mag$snf_subtype)
table(mag$snf_subtype, useNA = 'always')
readxl::read_excel("/Users/anders/Library/CloudStorage/OneDrive-UniversityofToronto/PhD/Data/magic_db/magic_db_all_tissues_20230221.xlsx") %>% View()
df
table(df$shh_subtype, useNA = 'always')
mag
table(mag$snf_subtype, useNA = 'always')
